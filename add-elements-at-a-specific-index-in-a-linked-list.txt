function LinkedList() {
  var length = 0;
  var head = null;

  var Node = function (element) {
    this.element = element;
    this.next = null;
  };

  this.size = function () {
    return length;
  };

  this.head = function () {
    return head;
  };

  this.print = function () {
    let current = head;
    let result = []
    while (current) {
      result.push(current.element);
      current = current.next;
    }
    console.log(result);
  }

  this.add = function (element) {
    var node = new Node(element);
    if (head === null) {
      head = node;
    } else {
      var currentNode = head;

      while (currentNode.next) {
        currentNode = currentNode.next;
      }

      currentNode.next = node;
    }
    length++;
  };

  // Only change code below this line
  this.addAt = function (index, element) {
    if (index < 0 || index > length) {
      return false;
    }

    var node = new Node(element);
    if (index === 0) {
      const oldHead = head;
      head = node;
      node.next = oldHead;
    } else {
      let i = 0;
      let currentNode = head;
      while (i < index - 1) {
        currentNode = currentNode.next
        i++;
      }
      const oldNode = currentNode.next;
      currentNode.next = node;
      node.next = oldNode;

    }
    length++;
  };
  // Only change code above this line
}

const list = new LinkedList();
list.add(1);
list.add(2);
list.add(3);
list.print();

console.log(list.addAt(4, "X"));
list.print();
