class CircularQueue {
  constructor(size) {
    this.queue = [];
    this.read = 0;
    this.write = 0;
    this.size = size;

    while (size > 0) {
      this.queue.push(null);
      size--;
    }
  }

  print() {
    return this.queue;
  }

  enqueue(item) {
    // Only change code below this line
    if (this.queue[this.write] === null) {
      this.queue[this.write] = item;
      this.write = (this.write + 1) % this.size;
      return item;
    } 
    return null;
    // Only change code above this line
  }

  dequeue() {
    // Only change code below this line
    if (this.queue[this.read] !== null) {
      const item = this.queue[this.read]
      this.queue[this.read] = null;
      this.read = (this.read + 1) % this.size;
      return item;
    }
    return null;
    // Only change code above this line
  }
}


